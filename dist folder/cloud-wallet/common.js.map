{"version":3,"sources":["./src/app/auth/create-skywallet/create-address/username.validator.ts","./src/app/auth/create-localwallet/setup-mail-psw/custom-validators.ts"],"names":[],"mappings":";;;;;;;;;;AAEA;AAAA;AAAO,MAAM,iBAAiB;IAC1B,MAAM,CAAC,kBAAkB,CAAC,OAAwB;QAC9C,IAAI,OAAO,CAAC,KAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAC;YAC3C,OAAO,EAAC,kBAAkB,EAAE,IAAI,EAAC;SACpC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;;;;;;;;;;;;;ACRD;AAAA;AAAO,MAAM,gBAAgB;IAC3B,MAAM,CAAC,gBAAgB,CAAC,KAAa,EAAE,KAAuB;QAC5D,OAAO,CAAC,OAAwB,EAA0B,EAAE;YAC1D,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAClB,sCAAsC;gBACtC,OAAO,IAAI,CAAC;aACb;YAED,4DAA4D;YAC5D,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAExC,wFAAwF;YACxF,OAAO,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;CACF","file":"common.js","sourcesContent":["import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n  \r\nexport class UsernameValidator {\r\n    static cannotContainSpace(control: AbstractControl) : ValidationErrors | null {\r\n        if((control.value as string).indexOf(' ') >= 0){\r\n            return {cannotContainSpace: true}\r\n        }\r\n  \r\n        return null;\r\n    }\r\n}","import { ValidationErrors, ValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\nexport class CustomValidators {\r\n  static patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n      if (!control.value) {\r\n        // if control is empty return no error\r\n        return null;\r\n      }\r\n\r\n      // test the value of the control against the regexp supplied\r\n      const valid = regex.test(control.value);\r\n\r\n      // if true, return no error (no error), else return error passed in the second parameter\r\n      return valid ? null : error;\r\n    };\r\n  }\r\n}"],"sourceRoot":"webpack:///"}