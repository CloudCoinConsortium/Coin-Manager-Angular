{"version":3,"sources":["./src/app/dashboard/transactions/upload/upload.module.ts","./src/app/dashboard/transactions/upload/upload.component.ts","./src/app/dashboard/transactions/upload/upload.component.html","./src/app/dashboard/transactions/upload/upload-routing.module.ts"],"names":[],"mappings":"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","file":"upload-upload-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UploadRoutingModule } from './upload-routing.module';\r\nimport { UploadComponent } from './upload.component';\r\n\r\nimport {NgFileDragDropModule} from  'ng-file-drag-drop';\r\nimport { LottieModule } from 'ngx-lottie';\r\nimport { FormsModule } from '@angular/forms';\r\n@NgModule({\r\n  declarations: [UploadComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UploadRoutingModule,\r\n    NgFileDragDropModule,\r\n    LottieModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class UploadModule { }\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AnimationItem } from 'lottie-web';\r\nimport { AnimationOptions } from 'ngx-lottie';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.scss']\r\n})\r\n\r\nexport class UploadComponent implements OnInit {\r\n\r\n  userLocal: string;\r\n  successInfo: boolean;\r\n  receiptdetails: any;\r\n  errorInfo: boolean;\r\n  payload: any;\r\n  taskId: any;\r\n  successMsg: string;\r\n  errorMsg: string;\r\n  loadingMessage: string;\r\n  showLoader: boolean;\r\n  dateTime: any;\r\n  afterClick: boolean = false;\r\n  showreceipt: boolean = false;\r\n  file: any = [];\r\n  baseAdd: any = [];\r\n  btn: boolean = true;\r\n  transaction: any = [];\r\n  files: any[] = [];\r\n  base: any = [];\r\n  type: string;\r\n  tag: any;\r\n  frackedDetail: any;\r\n  isFracked: boolean;\r\n  totalimport: any;\r\n  counterfeitCoin: any;\r\n  delButton: boolean = false;\r\n  fileData: any;\r\n  coinsInfo: any = '';\r\n  email: string;\r\n  remarkInvalid: boolean\r\n\r\n\r\n  @ViewChild(\"fileDropRef\", { static: false }) fileDropEl: ElementRef;\r\n\r\n  options: AnimationOptions = {\r\n    path: 'https://raida11.cloudcoin.global/animation/cloud_loading.json'\r\n  };\r\n  errorOptions: AnimationOptions = {\r\n    path: 'https://raida11.cloudcoin.global/animation/error.json'\r\n  };\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private storage: EventService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userLocal = localStorage.getItem('userLocal');\r\n    this.type = localStorage.getItem('wallet');\r\n  }\r\n\r\n  async getTransaction() {\r\n    var data = localStorage.getItem('userLocal');\r\n    try {\r\n      let response: any = await this.api.getTransaction(data);\r\n      this.transaction = response;\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n      this.errorInfo = true;\r\n      this.errorMsg = \"Failed\";\r\n    }\r\n  }\r\n\r\n  animationCreated(animationItem: AnimationItem): void {\r\n    console.log(animationItem);\r\n  }\r\n\r\n  showLoading(state): void {\r\n    this.loadingMessage = '';\r\n    if (state) {\r\n      this.showLoader = true;\r\n    } else {\r\n      this.showLoader = false;\r\n    }\r\n  }\r\n  async doCheck(taskID: any, xdata: any) {\r\n    let task: any = await this.api.doCheck(taskID);\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      this.totalimport = this.payload.data?.pown_results?.total;\r\n      if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n        if (this.payload.status == \"completed\") {\r\n          this.afterClick = true;\r\n          this.dateTime = new Date();\r\n          this.storage.setItem(\"wallet\", \"localwallet\", 'upload');\r\n          if (this.payload?.data?.pown_results?.fracked != 0) {\r\n            let data = {\r\n              name: this.userLocal,\r\n              pown_items: [{\r\n                sn: this.payload.data.pown_results?.coins[0].sn,\r\n                pownstring: this.payload.data?.pown_results?.coins[0].pownstring\r\n              }],\r\n              tickets: [this.payload.data?.pown_results?.tickets[0]]\r\n            }\r\n            // this.fixfracked(data);\r\n          }\r\n        } else {\r\n          this.afterClick = false;\r\n          this.btn = true;\r\n          this.successInfo = false;\r\n          this.errorInfo = false;\r\n          this.baseAdd = [];\r\n          this.files = [];\r\n          this.base = [];\r\n          Swal.fire({\r\n            title: 'The coins you attempted to import are not CloudCoins and not supported by this program. Please upgrade to a newer version',\r\n            icon: 'error',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) { { } }\r\n          });\r\n        }\r\n        this.successInfo = false;\r\n        this.errorInfo = false;\r\n        return;\r\n      }\r\n      this.successInfo = true;\r\n      this.successMsg = \"Doing.... Task ID \" + taskID + \", Progress \" + this.payload.progress + \"%\";\r\n      setTimeout(() => {\r\n        this.doCheck(taskID, xdata)\r\n      }, 500)\r\n\r\n    }\r\n    else {\r\n      this.errorInfo = true;\r\n      this.successInfo = false;\r\n      this.errorMsg = \"Call Failed\";\r\n      this.btn = true;\r\n    }\r\n  }\r\n\r\n\r\n  async getPath() {\r\n    try {\r\n      let response: any = await this.api.importFile();\r\n      if (response.status == \"success\") {\r\n        this.files = response?.payload?.items_picked;\r\n        this.btn = false;\r\n        for (let i = 0; i < this.files.length; i++) {\r\n          var last = this.files[i].substring(this.files[i].lastIndexOf(\".\") + 1, this.files[i].length);\r\n          switch (last) {\r\n            case 'stack': {\r\n              this.coinsInfo = 'old';\r\n              Swal.fire({\r\n                title: ' You are attempting to load Legacy CloudCoins into Coin Manager. These coins will be upgraded at the rate of 1 new CC for every 85.125 Legacy CC. Your share of the CC pie will remain the same but you will have fewer slices that are each 85.125 times larger. A maximum of 300K Legacy coins can be converted at one time. Do you wish to continue?',\r\n                icon: 'info',\r\n                confirmButtonText: 'Okay',\r\n                showCancelButton: true,\r\n                showConfirmButton: true,\r\n                cancelButtonText: 'Cancel'\r\n              }).then(async (result) => {\r\n                if (result.isConfirmed) {\r\n                  const { value: email } = await Swal.fire({\r\n                    title: 'Enter email address',\r\n                    input: 'email',\r\n                    inputLabel: 'Email',\r\n                    inputPlaceholder: 'Email address'\r\n                  })\r\n                  this.email = email;\r\n                  console.log(\"email is:\" + this.email)\r\n                } else {\r\n                  this.router.navigate(['/dashboard/home'])\r\n                }\r\n              })\r\n\r\n              break;\r\n            }\r\n            case 'png': {\r\n              this.coinsInfo = 'new';\r\n              break;\r\n            }\r\n            case 'bin': {\r\n              this.coinsInfo = 'new';\r\n              break;\r\n            }\r\n            default: {\r\n              Swal.fire({\r\n                title: \"Please select files with bin or png extension.\",\r\n                icon: 'error',\r\n                confirmButtonText: 'Okay',\r\n              }).then((result) => {\r\n                if (result.value) { { } }\r\n              });\r\n              break;\r\n            }\r\n          }\r\n          console.log(\"number of files:\" + this.files.length);\r\n          if (this.files.length > 24000) {\r\n\r\n            this.files = []\r\n            Swal.fire({\r\n              title: 'Too many files selected. Maximum number of files that can be selected per import is 24000',\r\n              icon: 'error',\r\n              confirmButtonText: 'Okay',\r\n\r\n\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n\r\n  keyPressAlphaNumericWithCharacters(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9-_ ]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getLength() {\r\n    console.log(\"tag :\" + this.tag.length)\r\n    if (this.tag.length > 64) {\r\n      this.remarkInvalid = true\r\n      Swal.fire({\r\n        title: \"Remarks only allows for 64 character memo\",\r\n        icon: 'info',\r\n        confirmButtonText: 'Okay'\r\n      })\r\n    }\r\n    else {\r\n      this.remarkInvalid = false\r\n    }\r\n  }\r\n  async next() {\r\n    this.delButton = true;\r\n\r\n    if (this.coinsInfo == 'new') {\r\n      try {\r\n        for (let i = 0; i < this.files?.length; i++) {\r\n          this.base.push({ 'type': 'file', 'data': this.files[i] })\r\n        }\r\n        var data = {\r\n          name: this.userLocal,\r\n          tag: this.tag,\r\n          items: this.base\r\n        }\r\n        let response: any = await this.api.import(data);\r\n        if (response.status === \"success\") {\r\n          this.btn = true;\r\n          this.doCheck(response.payload?.id, (data: any) => {\r\n            this.successInfo = true;\r\n            this.successMsg = \"Done \" + JSON.stringify(data)\r\n          });\r\n        } else {\r\n          if (response.payload.message == \"Validation error. tag: must be in a valid format.\") {\r\n            Swal.fire({\r\n              title: \"Remark must be in valid format\",\r\n              icon: 'warning',\r\n              confirmButtonText: 'Okay',\r\n            }).then((result) => {\r\n              if (result.value) { { } }\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: response.payload.message,\r\n              icon: 'error',\r\n              confirmButtonText: 'Okay',\r\n            }).then((result) => {\r\n              if (result.value) { { } }\r\n            });\r\n          }\r\n        }\r\n      }\r\n      catch (e) {\r\n        console.log(e);\r\n      }\r\n    } else if (this.coinsInfo == 'old') {\r\n\r\n      try {\r\n        var toConvert: any = []\r\n        for (let i = 0; i < this.files.length; i++) {\r\n          toConvert.push({ 'type': 'file', 'data': this.files[i] })\r\n        }\r\n        var data1 = {\r\n          name: this.userLocal,\r\n          items: toConvert,\r\n          email: this.email\r\n        }\r\n\r\n        let response: any = await this.api.convert(data1);\r\n        if (response.status == 'success') {\r\n          this.showLoading(true);\r\n          this.loadingMessage = 'Importing Coins...'\r\n          this.doConvert(response.payload?.id, (data: any) => {\r\n            this.successInfo = true;\r\n            this.successMsg = \"Done \" + JSON.stringify(data)\r\n          });\r\n        }\r\n        else if (response.status == 'error') {\r\n          if (response.payload.code == 4121) {\r\n            Swal.fire({\r\n              title: 'Please provide Email that exists',\r\n              icon: 'error',\r\n              confirmButtonText: 'Okay',\r\n            }).then(async (result) => {\r\n              if (result.isConfirmed) {\r\n                const { value: email } = await Swal.fire({\r\n                  title: 'Input email address',\r\n                  input: 'email',\r\n                  inputLabel: 'Please provide email address',\r\n                  inputPlaceholder: 'Email address'\r\n                })\r\n                this.email = email;\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  async fixfracked(data: any) {\r\n    try {\r\n      let response: any = await this.api.postFix(data);\r\n      console.log(response);\r\n      if (response.status === \"success\") {\r\n        this.isFracked = true;\r\n        this.doCheck1(response.payload?.id, (data: any) => {\r\n          this.successInfo = true;\r\n          this.successMsg = \"Done \" + JSON.stringify(data)\r\n        })\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async doCheck1(taskID: any, xdata: any) {\r\n    let task: any = await this.api.doCheck(taskID);\r\n    if (task) {\r\n      if (task.payload.status == \"error\" || task.payload.status == \"completed\") {\r\n        if (task.payload.status == \"completed\") {\r\n          this.frackedDetail = task.payload.data;\r\n          if (task.payload.data.total_errors != 0 || task.payload.data.total_skipped != 0) {\r\n          }\r\n        } else {\r\n          this.btn = true;\r\n          Swal.fire({\r\n            title: \"Failure! could not fix the coin.\",\r\n            icon: 'warning',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) { { } }\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        this.doCheck1(taskID, xdata)\r\n      }, 500)\r\n    }\r\n    else {\r\n      this.errorInfo = true;\r\n      this.successInfo = false;\r\n      this.errorMsg = \"Call Failed\";\r\n      this.btn = true;\r\n    }\r\n  }\r\n\r\n  async doConvert(taskID: any, xdata: any) {\r\n    let task: any = await this.api.doCheck(taskID);\r\n    console.log(\"Task done: \", task);\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      if (task.payload.status == \"error\" || task.payload.status == \"completed\") {\r\n        this.showLoading(false);\r\n        if (task.payload.status == \"completed\") {\r\n          this.btn = false;\r\n          this.afterClick = true;\r\n          this.dateTime = new Date();\r\n          this.storage.setItem(\"wallet\", \"localwallet\", 'upload');\r\n        } else {\r\n          this.btn = true;\r\n          this.showLoading(false);\r\n          this.files = [];\r\n          Swal.fire({\r\n            title: 'Failure to import!',\r\n            text: 'Error code:' + ' ' + this.payload?.data?.code + '.' + ' ' + this.payload?.data?.message,\r\n            icon: 'warning',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) { { } }\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        this.doConvert(taskID, xdata)\r\n      }, 500)\r\n    }\r\n    else {\r\n      this.errorInfo = true;\r\n      this.successInfo = false;\r\n      this.errorMsg = \"Call Failed\";\r\n      this.btn = true;\r\n    }\r\n  }\r\n\r\n  go() {\r\n    this.router.navigate([\"/dashboard/home\"]);\r\n  }\r\n\r\n\r\n  deleteFile(index: number) {\r\n    this.files.splice(index, 1);\r\n    if (this.files.length == 0) {\r\n      this.btn = true;\r\n      this.successInfo = false;\r\n      this.errorInfo = false;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"transWrapper\" *ngIf=\"!afterClick\">\r\n    <div class=\"headerbackWrap\">\r\n        <a href=\"javascript:;\" routerLink=\"/dashboard/home\" class=\"backBtnInHeader\"><img src=\"assets/arrow.svg\"\r\n                alt=\"\"></a>\r\n        <span class=\"titleOne\">Import CC to Folder {{this.userLocal}}</span>\r\n    </div>\r\n    <div class=\"transBody\" *ngIf=\"!showLoader\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 d-flex\">\r\n            </div>\r\n        </div>\r\n        <div class=\"gap20\"></div>\r\n        <div class=\"formField\">\r\n            <label for=\"\">Remarks <small>(optional)</small></label>\r\n            <input type=\"text\" [(ngModel)]=\"tag\" placeholder=\"Ex: Pay for doing chores\" style=\"width: 255px;\"\r\n                (keypress)=\"keyPressAlphaNumericWithCharacters($event)\" (change)=\"getLength()\">\r\n        </div>\r\n        <div class=\"gap10\"></div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"formField\">\r\n                    <a href=\"javascript:;\" class=\"btnCustomBlue\" (click)=\"getPath()\"><span class=\"textWithIcon\">Select\r\n                            Coins to Deposit</span>\r\n                    </a>\r\n                    <span class=\"darkText ml-2\">(Maximum Import: 24K CC or 300K Legacy CC)</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6 mt-2\">\r\n                <div class=\"progressWrap\" *ngIf=\"successInfo\">\r\n                    <div class=\"progress\">\r\n                        <div class=\"progress-bar progress-bar-striped\" role=\"progressbar\"\r\n                            style=\"background-color: green!important;\" [ngStyle]=\"{'width': payload.progress + '%'}\"\r\n                            aria-valuenow=\"60\" aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ng-container>\r\n                    <span class=\"errorMsg\" *ngIf=\"errorInfo\"><img src=\"assets/error_info_icon.svg\"\r\n                            alt=\"error icon\">{{errorMsg}}</span>\r\n                </ng-container>\r\n                <div class=\"\" *ngIf=\" this.files.length == 1 || this.files.length > 1\">\r\n                    <div class=\"file_upload justify-content-between\">\r\n                        <div class=\"position-relative uploadtextWrap\">\r\n                            <span class=\"pl-2 text-white text-left progress_text\"\r\n                                style=\"display: flex; align-items: center;\"> Total number of files selected:\r\n                                {{this.files.length}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"\">\r\n                    <div class=\"file_upload justify-content-between\" *ngFor=\"let d of files; let i = index\">\r\n                        <div class=\"position-relative uploadtextWrap\">\r\n                            <span class=\"pl-2 text-white text-left progress_text\"\r\n                                style=\"display: flex; align-items: center;\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                                    class=\"bi bi-cloud-download\" viewBox=\"0 0 16 16\">\r\n                                    <path\r\n                                        d=\"M4.406 1.342A5.53 5.53 0 0 1 8 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 0 1 0-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 0 0-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 0 1 0 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z\" />\r\n                                    <path\r\n                                        d=\"M7.646 15.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 14.293V5.5a.5.5 0 0 0-1 0v8.793l-2.146-2.147a.5.5 0 0 0-.708.708l3 3z\" />\r\n                                </svg>\r\n                                <label class=\"pl-2 ulpldText\">{{ d }}</label>\r\n                            </span>\r\n                        </div>\r\n                        <a href=\"javascript:;\" class=\"fa fa-trash text-danger fs-32 pt-1\" (click)=\"deleteFile(i)\"></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"info_text\">\r\n                <img src=\"assets/icons_info1.png\" alt=\"image\" class=\"info_img\" />\r\n                <p>When coins are deposited, they receive new\r\n                    verification keys that allow them to prove\r\n                    their authenticity.\r\n                </p>\r\n                <p>\r\n                    These new keys will last for five years. You are always free to\r\n                    renew these five\r\n                    years by simply navigating to \"Other Actions\" in your Wallet and selecting\r\n                    \"Verify Coin Authenticity\".\r\n                </p>\r\n                <p>\r\n                    Any previous backups of these coins will be considered counterfeit\r\n                    and no longer\r\n                    valid. Be sure to create new backups of the Wallet that these coins are being added\r\n                    to and store them in a safe place.\r\n                </p>\r\n\r\n            </div>\r\n            <div class=\"transBottomFooter\">\r\n                <a href=\"javascript:;\" [ngClass]=\"{'btnDisable' : btn || remarkInvalid == true}\"\r\n                    class=\"btnCustomBlue btnLarge ml-3\" (click)=\"next()\">Deposit Selected Coins</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div>\r\n    <div class=\"transWrapper\" *ngIf=\"afterClick\">\r\n        <div class=\"headerbackWrap\">\r\n            <span class=\"titleOne\">Deposit Results</span>\r\n        </div>\r\n        <div class=\"transBody\" *ngIf=\"coinsInfo == 'new'\">\r\n            <div class=\"gap10\"></div>\r\n            <div class=\"formField\">\r\n                <label for=\"\">Coins Attempted: &nbsp; <span style=\"opacity: 0.7;\">{{totalimport}}</span></label>\r\n            </div>\r\n            <div class=\"formField\" *ngIf=\"payload?.data?.pown_results?.authentic > 0\">\r\n                <label for=\"\">Coins Authentic: &nbsp; <span\r\n                        style=\"opacity: 0.7;\">{{payload?.data?.pown_results?.authentic}}</span></label>\r\n            </div>\r\n            <div class=\"formField\" *ngIf=\"payload?.data?.pown_results?.counterfeit > 0\">\r\n                <label for=\"\">Coins Counterfeit: &nbsp; <span\r\n                        style=\"opacity: 0.7;\">{{payload?.data?.pown_results?.counterfeit}}</span></label>\r\n            </div>\r\n            <!-- <div class=\"formField\" *ngIf=\"payload?.data?.pown_results?.fracked > 0\">\r\n                <label for=\"\">Coins Fracked: &nbsp; <span\r\n                        style=\"opacity: 0.7;\">{{payload?.data?.pown_results?.fracked}}</span></label>\r\n            </div> -->\r\n            <div class=\"formField\" *ngIf=\"payload?.data?.pown_results?.already_exists > 0\">\r\n                <label for=\"\">Coins already exists in your wallet: &nbsp; <span\r\n                        style=\"opacity: 0.7;\">{{payload?.data?.pown_results?.already_exists}}</span></label>\r\n            </div>\r\n            <div class=\"formField\" *ngIf=\"payload?.data?.pown_results?.limbo > 0\">\r\n                <label for=\"\">Coins in limbo: &nbsp; <span\r\n                        style=\"opacity: 0.7;\">{{payload?.data?.pown_results?.limbo}}</span></label>\r\n            </div>\r\n            <!-- <div class=\"formField\" *ngIf=\"isFracked && frackedDetail?.total_fixed > 0\">\r\n                <label for=\"\">Total fixed coins: &nbsp; <span\r\n                        style=\"opacity: 0.7;\">{{frackedDetail?.total_fixed}}</span></label>\r\n            </div> -->\r\n            <div class=\"formField\" *ngIf=\"payload?.data?.pown_results?.wrong_type > 0\">\r\n                <label for=\"\">Wrong Coin Type: &nbsp; <span\r\n                        style=\"opacity: 0.7;\">{{payload?.data?.pown_results?.wrong_type}}</span></label>\r\n            </div>\r\n            <!-- <div class=\"formField\" *ngIf=\"isFracked && frackedDetail?.total_skipped > 0\">\r\n                <label for=\"\">Total skipped coins: &nbsp; <span\r\n                        style=\"opacity: 0.7;\">{{frackedDetail?.total_skipped}}</span></label>\r\n            </div> -->\r\n            <!-- <div class=\"formField\" *ngIf=\"isFracked && frackedDetail?.total_errors > 0\">\r\n                <label for=\"\">Total errors: &nbsp; <span\r\n                        style=\"opacity: 0.7;\">{{frackedDetail?.total_errors}}</span></label>\r\n            </div> -->\r\n\r\n            <div class=\"formField\" *ngIf=\"totalimport > 0\">\r\n                <label for=\"\"><a href=\"javascript:;\" (click)=\"showreceipt =! showreceipt\">See Receipt</a>&nbsp;</label>\r\n            </div>\r\n            <div class=\"gap20\"></div>\r\n            <a href=\"javascript:;\" class=\"btnCustomBlue btnLarge\" (click)=\"go()\">Close</a>\r\n        </div>\r\n        <div class=\"headerbackWrap\" *ngIf=\"payload?.data?.TotalCoins > 0 \">\r\n            <span class=\"titleOne\">Deposit Results</span>\r\n        </div>\r\n        <div class=\"transBody\" *ngIf=\"coinsInfo == 'old'\">\r\n            <div class=\"gap10\"></div>\r\n            <div class=\"formField\">\r\n                <label for=\"\">Total OLD Coins Attempted: &nbsp; <span\r\n                        style=\"opacity: 0.7;\">{{payload?.data?.total_coins}}</span></label>\r\n            </div>\r\n            <div class=\"formField\" *ngIf=\"payload?.data?.TotalConverted !== 0\">\r\n                <label for=\"\">Total NEW Coins Deposited successfully: &nbsp; <span\r\n                        style=\"opacity: 0.7;\">{{payload?.data?.total_converted}}</span></label>\r\n            </div>\r\n            <div class=\"formField\" *ngIf=\"payload?.data?.TotalConvertFailed !== 0\">\r\n                <label for=\"\">Total NEW Coins Failed: &nbsp; <span\r\n                        style=\"opacity: 0.7;\">{{payload?.data?.total_counterfeit}}</span></label>\r\n            </div>\r\n            <div class=\"gap20\"></div>\r\n            <a href=\"javascript:;\" class=\"btnCustomBlue btnLarge\" (click)=\"go()\">Close</a>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"modalContainer\" *ngIf=\"showreceipt\">\r\n        <div class=\"modalOverlay\" (click)=\"showreceipt = false\"></div>\r\n        <div class=\"modalWrap modalMedium\">\r\n            <div class=\"modalHeader\">\r\n                <h1>Details:</h1>\r\n                <div class=\"modalClose\" (click)=\"showreceipt = false\">\r\n                    <img src=\"assets/close-white.svg\" alt=\"icon\">\r\n                </div>\r\n            </div>\r\n            <div class=\"modalBody scroll1\">\r\n                <p class=\"text-white mb-n1\">Receipt: {{payload?.data?.receipt_id}}</p>\r\n                <p class=\"text-white mb-n1\">{{dateTime | date:'MM/dd/yyyy HH:mm'}}</p>\r\n                <div class=\"gap20\"></div>\r\n                <div class=\"gap20\"></div>\r\n                <div class=\"formField\">\r\n                    <label for=\"\">Total Coins Attempted: &nbsp; <span\r\n                            style=\"opacity: 0.7;\">{{totalimport}}</span></label>\r\n                </div>\r\n                <div class=\"gap10\"></div>\r\n                <div class=\"formField\">\r\n                    <label for=\"\">Total Authentic: &nbsp; <span\r\n                            style=\"opacity: 0.7;\">{{payload?.data?.pown_results?.authentic}}</span></label>\r\n                </div>\r\n                <div class=\"gap10\"></div>\r\n                <div class=\"formField\">\r\n                    <label for=\"\">Total Authentic (Fractured): &nbsp; <span\r\n                            style=\"opacity: 0.7;\">{{payload?.data?.pown_results?.fracked}}</span></label>\r\n                </div>\r\n                <div class=\"gap10\"></div>\r\n                <div class=\"formField\">\r\n                    <label for=\"\">Total Counterfeit: &nbsp; <span\r\n                            style=\"opacity: 0.7;\">{{payload?.data?.pown_results?.counterfeit}}</span></label>\r\n                </div>\r\n                <div class=\"gap10\"></div>\r\n                <div class=\"formField\">\r\n                    <label for=\"\">Total Unprocessed: &nbsp; <span\r\n                            style=\"opacity: 0.7;\">{{payload?.data?.pown_results?.limbo}}</span></label>\r\n                </div>\r\n                <div class=\"gap20\"></div>\r\n                <p class=\"text-white mb-n1\">The Pownstring shows each of the 25s RAIDA’s responses from 0 to 24\r\n                    encoded\r\n                    in a single character. p=pass,\r\n                    f=fail, u=untried, n=no response and e= error.</p>\r\n                <div class=\"gap20\"></div>\r\n                <div class=\"sectionOne\">\r\n                    <div *ngFor=\"let data of payload?.data?.pown_results?.coins | keyvalue : returnZero\">\r\n                        <p class=\"text-white mb-n1\">Serial Number : {{data.value.sn}}</p>\r\n                        <p class=\"text-white mb-n1\"> Pownstring : {{data.value.pownstring}}</p>\r\n                        <p class=\"text-white mb-n1\"> Result : {{data.value.result}}</p>\r\n                        <br>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"onEventLoadWrap\" *ngIf=\"showLoader\">\r\n        <ng-container>\r\n            <div class=\"text-center  loader_show\">\r\n                <ng-lottie height=\"150px\" [options]=\"options\" (animationCreated)=\"animationCreated($event)\"></ng-lottie>\r\n                <span style=\"color:#ffffff\">{{loadingMessage}}</span>\r\n            </div>\r\n        </ng-container>\r\n    </div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UploadComponent } from './upload.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component : UploadComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UploadRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}